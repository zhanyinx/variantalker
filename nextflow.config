/**************************** Basic parameters ****************************/
process.executor = 'pbspro'
process.queue = 'workq'

singularity.runOptions = ' --bind /hpcnfs/ '


process{
      withName: ascat_calling{
         conda = '' // path to variantalker_clonaltmb conda env
   }
}

// different containers
process {
   withName: germline_renovo_annotation {
      container = 'docker://yinxiu/renovo:latest'
   }
}

params {

   // input output
   input                      = null
   output                     = null

   // analysis
   analysis                   = 'annotation' // type of analysis: annotation, biomarker, database_update. If not defined, annotation is used

   // references
   build                      = 'hg38' // hg19 or hg38
   fasta                      = '' // genome fasta file
   pipeline                   = 'dragen' // dragen, sarek and iontorrent available. 
   target                     = '' // target file, if whole genome, put a bed file with chromosome, start end (e.g. chr1 1 248956422)
   tumoronly                  = false // true if no normal is present
   projectid                  = 'test'

   // Boilerplate options
   publish_dir_mode           = 'copy'
   email_on_fail              = null
   plaintext_email            = false
   monochrome_logs            = false
   hook_url                   = null
   help                       = false
   version                    = false
   validate_params            = true
   show_hidden_params         = false
   schema_ignore_params       = 'biomarkers,classifyCNV_folder,renovo_path'




   /**************************** Annotation input file ****************************/
   
   // Annovar funcotator databases
   funcotator_somatic_db       = '' // path to funcotator somatic database, e.g. funcotator_dataSources.v1.7.20200521s
   funcotator_germline_db      = '' // path to funcotator somatic database, e.g. funcotator_dataSources.v1.7.20200521s
   
   annovar_db                  = '' // path to annovar database, e.g. humandb folder within annovar software
   annovar_software_folder     = '' // path to annovar software 
   


   // CancerVar and InterVar 
   cancervar_evidence_file     = '' // Add your own Evidence file for each Variant: evidence file as tab-delimited,format like this: Chr Pos Ref_allele Alt_allele  Evidence_list
   cancervar_input_type        = 'VCF' // VCF for single and VCF_m for multiple samples

   intervar_evidence_file      = '' // Add your own Evidence file for each Variant: evidence file as tab-delimited,format like this: Chr Pos Ref_allele Alt_allele  PM1=1;BS2=1;PP2=0
   intervar_input_type         = 'VCF' 

   // CNVKit
   cnvkit_cellularity          = '' // tumor purity
   cnvkit_threshold            = '-1.1,-0.4,0.3,0.7' // Hard thresholds for calling each integer copy number, separated by commas

   // renovo annotation
   renovo_path                 = "/software/renovo/" //path within singularity

   // cnv annotation
   classifyCNV_folder          = '/software/ClassifyCNV' // path within singularity


   /**************************** Biomarkers parameters ****************************/

   biomarkers_ascat_config     = "" // configuration file to run ascat using nf-core/sarek (https://nf-co.re/sarek). If not defined, it uses the one in resources/configs/ascat.sarek.config
   biomarkers_ascat_step       = "--variant_calling" // step at which to start, default --variant_calling
}


/**************************** Profiles ****************************/
profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        conda.enabled          = true
        charliecloud.enabled   = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.enabled    = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = { params.use_gatk_spark ? false : true }.call()
        charliecloud.enabled   = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.enabled    = false
        process.container = 'docker://yinxiu/variantalker:v1.0'
        
    }
    singularity {
        singularity.autoMounts = true
        singularity.enabled    = true
        charliecloud.enabled   = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        process.container = 'docker://yinxiu/variantalker:v1.0'
    }
}


/**************************** Manifest ****************************************************/

manifest {
    name            = 'variantalker'
    author          = """Yinxiu Zhan, Bastian Eichenberger"""
    homePage        = 'https://github.com/zhanyinx/variantalker'
    description     = """Variant annotation pipeline."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0.0'
}



/**************************** Tower ****************************************************/
tower {
  enabled = false
}