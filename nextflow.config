/**************************** Basic parameters ****************************/
process.executor = 'pbspro'
process.queue = 'workq'

// singularity
singularity.runOptions = ' --bind /hpcnfs/ '
singularity.enabled = true

process.container = 'docker://yinxiu/variantalker:v1.0'
// different containers
process {
   withName: germline_renovo_annotation {
      container = 'docker://yinxiu/renovo:latest'
   }
}

process{
   withName: ascat_calling{
      container = '' // inactivate singularity for clonal tmb
   }
}

params.build = 'hg38' // hg19 or hg38
params.fasta = '/hpcnfs/scratch/DIMA/genomes/dragen/GRCh38_full_analysis_set_plus_decoy_hla.fa' // genome fasta file
params.pipeline = 'dragen' // dragen or sarek (funcotator works well with sarek), all other pipelines needs tuning of the vcf file to be adapted to funcotator. For now it works for dragen (missing tumor/normal_sample lines in the header)
params.target = '/hpcnfs/data/DIMA/BED_FILTERED/Twist_hg38_CORRECT.bed' // target file
params.tumoronly = false // true if no normal is present
params.output = "/hpcnfs/techunits/genomics/PublicData/DIMA_Staging/" // default output folder for all annotation, biomarker and report files
params.projectid = "test"


tower {
  //accessToken = ""
  enabled = false
  //workspaceId = ""
}

/**************************** Annotation input file ****************************/
// input files
params{
   somatic{
      funcotator_db = '/hpcnfs/scratch/temporary/public_databases/funcotator_dataSources.v1.7.20200521s' // path to funcotator somatic database
      input_cnv = '' // For sarek: cnvkit_input.tsv that is created by create_cnvkit_input.sh. For dragen, list of files *name*format
      input_snp_indel = '' // format of file tab separated: tumor_type vcf_file
   }
   germline{
      funcotator_db = '/hpcnfs/scratch/temporary/public_databases/funcotator_dataSources.v1.7.20200521g' // path to funcotator germline database
      input_snp_indel = '' // vcf or list of vcf files
   }
}

// cancervar and intervar 
params {
   cancervar {
      annovar_db_folder = '/hpcnfs/scratch/temporary/public_databases/humandb/' // path to annovar database
      annovar_folder = '/hpcnfs/data/DIMA/softwares/annovar' // path to annovar software
      db = '/hpcnfs/data/DIMA/softwares/CancerVar/cancervardb' // path to cancervar databases
      input_type = 'VCF_m' // VCF for single and VCF_m for multiple samples
   }
   intervar {
      db = '/hpcnfs/data/DIMA/softwares/InterVar/intervardb' // path to intervar databases
      input_type = 'VCF'
   }
}


/* Remove comment if you want to use your own cancervar, intervar and annovar databases and softwares
// DANGER ZONE, modify if you know what you are doing
// optional configs for cancervar and intervar
params{
   cancervar_db = ''
   intervar_db = ''
   cancervar_init = '' // this file must be the same as the one in resources/configs/config.init.CancerVar except for the line database_names = 
   intervar_init = '' // this file must be the same as the one in resources/configs/config.init.intervar except for the line database_names = 
}
// END DANGER ZONE
/*


/**************************** Biomarkers parameters ****************************/
params{
   rna{
      input_counts = '' //tsv or list of tsv count files 
   }
}

params{
   ascat{
      input = "" // space/tab separated sarek (3.0.1) input file with extra column with cellularity. If cellularity is not present, just add header cellularity (column with no entry)
   }
}


/**************************** pipeline specific configurations ****************************/
includeConfig 'config/annotation.config'
includeConfig 'config/biomarker.config'


/**************************** Manifest ****************************************************/

manifest {
    name            = 'variantalker'
    author          = """Yinxiu Zhan, Bastian Eichenberger"""
    homePage        = 'https://github.com/zhanyinx/variantalker'
    description     = """Variant annotation pipeline."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0.0'
}
